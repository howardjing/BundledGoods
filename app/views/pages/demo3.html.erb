<h1>Tutorial</h1>

<script>


  $(function() {
    validator($("#problem1"));
    
    $("#next").click(function(event) {
      if (!isEverythingValid()) {
        event.preventDefault();
      }
    });
  });

  var validator = function(elem) {
  
    elem.children("button").click(function() {
        
      var success = 'control-group success';
      var error = 'control-group error';
      var everythingCorrect = true;

      elem.children(".question").each(function() {

        if (isValid($(this))) {
          if ($(this).attr('class').search(success) === -1) {
            $(this).removeClass(error);
            $(this).addClass(success);
          }
        } else {
          if ($(this).attr('class').search(error) === -1) {
            $(this).removeClass(success);
            $(this).addClass(error);
          }
          everythingCorrect = false;
        }
      });

      if (everythingCorrect) {
        elem.removeClass(error);
        elem.addClass(success);
        elem.children(".feedback").text("You've got it!");
      } else {
        elem.removeClass(success);
        elem.addClass(error);
        elem.children(".feedback").text("You are incorrect, please try again.");
      }

    });
  
  }

  var isValid = function(elem) {
    return elem.children(".response").val() === elem.children(":hidden").val();
  }

  var isEverythingValid = function() {
    var problems = $("div").filter(function() { return this.id.match("problem"); });
    
    var areQuestionsForEveryProblemCorrect = problems.map(function() {
      
      var areQuestionsForProblemCorrect = $(this).children(".question").map(function() {
        return isValid($(this));  
      });

      var booleanArray = $.makeArray(areQuestionsForProblemCorrect);
      return booleanArray.reduce(function(x,y) { return x && y; });
       
    });

    var booleanArray = $.makeArray(areQuestionsForEveryProblemCorrect);
    return booleanArray.reduce(function(x,y) { return x && y; });

  }

</script>

<STYLE type="text/css">
  DIV.mypars {text-align: left}
 </STYLE>
<BODY>

<div class="container">
 <DIV class="mypars">

<P>
	This tutorial will guide you in interpreting the full statements given in the experiment.
<P>
	Here will be the full instructions in calculating statements.
<ol>
	<li>
		You will be faced with a decision to purchase a bundle of arbitrary goods
		x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>, x<sub>4</sub> denoted as Good 1, Good 2, 
		Good 3, and Good 4.</li>
<br>
	<li>Each good has a utility value associated with each good based on <i>two times</i> the subscript
	of the good. (ie. Good 1 (x<sub>1</sub>) has utility value 2, Good 2 (x<sub>2</sub>) has
	utility value 4, Good <i>i</i> (x<sub>i</sub> has utility value 2 times i...) 
	Utility value is just an arbitrary preference scale over the set of 
	goods. The value will come into play for calculating your final payment.
	</li>
<br>
	<li> Purchasing goods together will have substitute and complement effects however. 
	It will be stated as follows for goods x<sub>i</sub>, x<sub>j</sub> ; i &ne; j with substitute complement
	effect &lambda;<sub>i,j</sub>,
<br>
<br>
		<i>"Purchasing goods x<sub>i</sub> and x<sub>j</sub> in an exclusive bundle
		makes you value the bundle '&lambda;<sub>i,j</sub>' as much as if you summed the individual
		utilities."</i>
<br>
<br>
	<li>For a concrete example, the statement for bundle with goods one and two
	would be as follows:</li>
<br>
		<i>"Purchasing goods one and two in an exclusive bundle makes you value the bundle three quarter 
		times as much as if you summed the individual utilities."</i> <br>
</ol>
<P>
	Given these instructions, answer the following question. The important details are italicized.
<P>
	<b>"Purchasing goods one and two in an exclusive bundle makes you <i>value the bundle three quarter 
		times as much</i> as if you <i>summed the individual utilities</i>.
<P>
</div>
	
<div class="well" id="problem1">
	<span style="display:inline-block" class="question">
    	<label>Substitute/Complement Effect</label>
    	<input type="text" class="san2 response" placeholder="Lambda Value">
    	<input type="hidden" value=".75" />
    </span> 
    
    <span style="display:inline-block" class="question">
    <label style="display:block">Operator</label>
		<select class="input-small response">
		  <option> </option>
  	  <option>+</option>
  	  <option>-</option>
  	  <option>/</option>
  	  <option>*</option>
    </select>
    <input type="hidden" value="*" />
  </span>
	(
	
	<span style="display:inline-block" class="question">
    <label>Good 1's Utility</label>
    <input type="text" class="span2 response" placeholder="What is it's value?…" />
    <input type="hidden" value="2" />
  	</span>
  
    <span style="display:inline-block" class="question">
    <label style="display:block">Operator</label>
		<select class="input-small response">
		  <option> </option>
  	  <option>+</option>
  	  <option>-</option>
  	  <option>/</option>
  	  <option>*</option>
    </select>
    <input type="hidden" value="+" />
  	</span>
  
	<span style="display:inline-block" class="question">
    <label>Good 2's Utility</label>
    <input type="text" class="span2 response" placeholder="What is it's value?…" />
    <input type="hidden" value="4" />
  </span>
  	)
  	=
	<span style="display:inline-block" class="question">
    <label>Goods 1 and 2's Utility</label>
    <input type="text" class="span2 response" placeholder="What is it's value?…" />
    <input type="hidden" value="4.5" />
 	 </span>
  <span class="help-block feedback"></span>
  <button class="btn btn-primary">Check</button>
</div>	
		
<P>
<%= button_to 'Next', instructions2_path, :class => 'btn btn-primary', :id => 'next', :method => 'get' %>